<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Stopwatch Web App</title>
  <style>
    body {
      background: #f0f0f0;
      font-family: 'Segoe UI', sans-serif;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      height: 100vh;
      margin: 0;
    }

    .stopwatch-container {
      background: white;
      padding: 30px;
      border-radius: 15px;
      box-shadow: 0 4px 20px rgba(0,0,0,0.1);
      text-align: center;
      width: 300px;
    }

    h1 {
      font-size: 2.5em;
      margin-bottom: 20px;
    }

    #display {
      font-size: 2em;
      margin-bottom: 20px;
      letter-spacing: 2px;
    }

    .buttons {
      display: flex;
      justify-content: space-around;
      margin-bottom: 15px;
    }

    .buttons button {
      padding: 10px 15px;
      font-size: 14px;
      border: none;
      border-radius: 8px;
      background: #007bff;
      color: white;
      cursor: pointer;
      transition: 0.2s;
    }

    .buttons button:hover {
      background: #0056b3;
    }

    .buttons button:disabled {
      background: #ccc;
      cursor: not-allowed;
    }

    ul#laps {
      list-style-type: none;
      padding: 0;
      margin: 10px 0 0;
      max-height: 150px;
      overflow-y: auto;
      border-top: 1px solid #ddd;
    }

    #laps li {
      padding: 5px;
      font-size: 14px;
      text-align: left;
      border-bottom: 1px solid #eee;
    }
  </style>
</head>
<body>

  <div class="stopwatch-container">
    <h1>Stopwatch</h1>
    <div id="display">00:00:00.000</div>
    <div class="buttons">
      <button id="startPause">Start</button>
      <button id="reset">Reset</button>
      <button id="lap">Lap</button>
    </div>
    <ul id="laps"></ul>
  </div>

  <script>
    let startTime = 0;
    let elapsedTime = 0;
    let timerInterval;
    let isRunning = false;

    const display = document.getElementById('display');
    const startPauseBtn = document.getElementById('startPause');
    const resetBtn = document.getElementById('reset');
    const lapBtn = document.getElementById('lap');
    const lapsList = document.getElementById('laps');

    function formatTime(ms) {
      const date = new Date(ms);
      const minutes = String(date.getUTCMinutes()).padStart(2, '0');
      const seconds = String(date.getUTCSeconds()).padStart(2, '0');
      const milliseconds = String(date.getUTCMilliseconds()).padStart(3, '0');
      return `${minutes}:${seconds}.${milliseconds}`;
    }

    function updateDisplay() {
      const now = Date.now();
      elapsedTime = now - startTime;
      display.textContent = formatTime(elapsedTime);
    }

    startPauseBtn.addEventListener('click', () => {
      if (!isRunning) {
        startTime = Date.now() - elapsedTime;
        timerInterval = setInterval(updateDisplay, 10);
        startPauseBtn.textContent = 'Pause';
        isRunning = true;
      } else {
        clearInterval(timerInterval);
        isRunning = false;
        startPauseBtn.textContent = 'Start';
      }
    });

    resetBtn.addEventListener('click', () => {
      clearInterval(timerInterval);
      startTime = 0;
      elapsedTime = 0;
      isRunning = false;
      display.textContent = '00:00:00.000';
      startPauseBtn.textContent = 'Start';
      lapsList.innerHTML = '';
    });

    lapBtn.addEventListener('click', () => {
      if (!isRunning) return;
      const lapTime = formatTime(elapsedTime);
      const li = document.createElement('li');
      li.textContent = `Lap ${lapsList.children.length + 1}: ${lapTime}`;
      lapsList.insertBefore(li, lapsList.firstChild);
    });
  </script>

</body>
</html>
